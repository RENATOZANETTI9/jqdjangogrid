/**
  * The jqDjangoGrid is a jquery's plugin and django app to produce a datagrid easily.
  * @author Gustavo Henrique, gustavo@gustavohenrique.net
  * @homepage http://www.gustavohenrique.net/jqdjangogrid
  *
  */
var dgrid = {
    s: {
        // app name generated by manage.py
        app_label: '',

        // name of model in models.py
        model_name: '',

        // the initial filter used in model.objects.filter()
        initial_filter: 'pk>0',

        // the filter used for search
        search_filter: 'pk__icontains="%s"',

        // private atribute sent to datagrid app
        _filter: '',

        // order show
        order: 'pk',

        // url of the datagrid app
        url: '/jqdjangogrid/',

        // dict contain the fields of model
        cols: {},

        // private attribute contain the cols in the string format
        _str_cols: '',

        // number page of previous, current and next. Also the total pages and total results
        previous_page: '',
        current_page: '',
        next_page: '',
        total_pages: '',
        total_result: '',
        page: 1,

        // total lines in the datagrid
        show_per_page: '10',

        // buttons in the navigation bar
        buttons: {},

        // private attribute contains the id of div container
        _div: '',
    },

    /**
     * Creates the datagrid's structure using tables.
     */
    createDatagrid: function(target) {
        this.s._div = $(target);
        this.s._div.css({'padding-top':'10px'});
        this.s._div.empty();
        html = '<form id="id_form_datagrid" action="." method="post">' +
               '<div id="div_search_field">' +
               '    <input type="text" id="id_search_text" name="search_text" value="Find..." onfocus="if (this.value == \'Find...\') this.value=\'\'" onblur="if (this.value == \'\') this.value=\'Find...\'" onkeyup="datagrid_search(this.value);">' +
               '</div>' +
               '<table id="table_datagrid" cellspacing="0" cellpadding="2" border="0">' +
               '  <thead class="table_datagrid_title"><tr class="sortable">';

        $.each(this.s.cols, function(key, value) {
            if (key == dgrid.s.order)
                th_class = 'asc';
            else
                th_class = 'head';

            html += '<th id="' + key + '" class="'+th_class+'" style="width:' + value.width + '" onclick="sorter(this);"><h3>' + value.label + '</h3></th>';
        });
        html += '</tr></thead><tbody></tbody></table></form>' +
                '<div id="datagrid_footer">' +
                '  <div id="datagrid_footer_left_buttons">';
                var b = this.s.buttons;
                if (this.s.buttons) {
                    var b;

                    $.each(this.s.buttons, function(key, b) {
                        if (b['type'] == 'button')
                            html += '<input type="button" value="'+b['label']+'" onclick="'+b['onclick']+'">&nbsp;';
                        else if (b['type'] == 'image')
                            html += '<img src="'+b['src']+'" alt="'+b['label']+'" onclick="'+b['onclick']+'">&nbsp;';
                    });
                }

                html += '</div>' +
                '  <div id="datagrid_footer_right_buttons">'  +
                '    <div id="id_total_result" class="datagrid_nav_text">TOTAL:</div>' +
                '    <div id="datagrid_nav_first" class="datagrid_nav_button" onclick="datagrid_first()"></div>' +
                '    <div id="datagrid_nav_previous" class="datagrid_nav_button" onclick="datagrid_previous()"></div>' +
                '    <div class="datagrid_nav_text"><input type="text" id="id_current_page" onkeydown="return goToPage(event, this.value);"></div>' +
                '    <div class="datagrid_nav_text">/</div>' +
                '    <div id="id_total_pages" class="datagrid_nav_text"></div>' +
                '    <div id="datagrid_nav_next" class="datagrid_nav_button" onclick="datagrid_next()"></div>' +
                '    <div id="datagrid_nav_last" class="datagrid_nav_button" onclick="datagrid_last()"></div>' +
                '<div style="clear:both"></div></div><div style="clear:both"></div></div><div style="clear:both"></div>';

        this.s._div.append(html);
        this.fillDatagrid();
    },

    /**
     * Fill the datagrid with all data.
     */
    fillDatagrid: function() {
        s = this.s;
        columns = ''
        $.each(s.cols, function(k, v) {
            columns += '"'+k+'": "'+v+'",';

        });
        s._str_cols = '{'+columns.slice(0,-1)+'}';

        $.ajax({
            type: 'POST',
            url: s.url,
            dataType: 'json',
            data: s,
            success: function(r) {
                // update the navigation bar
                var item = r[0];
                s.previous_page = item.previous_page;
                s.next_page = item.next_page;
                s.current_page = item.current_page;
                s.total_pages = item.total_pages;
                s.total_result = item.total_result;
                s.order = item.order;

                $('#id_current_page').val(item.current_page);
                $('#id_total_pages').text(item.total_pages);
                $('#id_total_result').text('TOTAL: '+item.total_result);

                $('#table_datagrid > tbody').empty();
                for (var i=0; i<item.queryset.length; i++) {
                    var q = item.queryset[i];
                    if (i % 2) row = 'row2'; else row = 'row1';
                    $('#table_datagrid > tbody').append('<tr class="'+row+'" onmouseover="$(this).attr(\'class\',\'row0\')" onmouseout="$(this).attr(\'class\',\''+row+'\')" onclick="$(\'#datagrid_row_pk_'+i+'\').attr(\'checked\',\'checked\')">');

                    $.each(s.cols, function(k, v) {
                        value = q[k];
                        if (k == 'pk')
                            value = '<input type="radio" id="datagrid_row_pk_'+i+'" name="'+k+'" value="'+value+'">'
                        $('#table_datagrid > tbody tr:last').append('<td>'+value+'</td>');
                    });
                    $('#table_datagrid > tbody').append('</tr>');
                };
            },
            error: function(error) {
                s._div.html(error.responseText);
            }
        });

    },

    /**
     * A generic method for deletion of the objects in django.
     */
    generic_datagrid_delete: function() {
        s = this.s;
        data = {
            'pk': get_datagrid_selected(),
            'model_name': s.model_name,
            'app_label': s.app_label,
        };
        $.ajax({
            type: 'POST',
            url: s.url+'delete/',
            dataType: 'text',
            data: data,
            success: function(r) {
              if (r == 'ok')
                  dgrid.fillDatagrid();
              else
                  alert(r);
            },
            error: function(error) {
                s._div.html(error.responseText);
            }
        });
    }

}

/**
 * Return the pk of the selected object.
 */
function get_datagrid_selected() {
    return $('#id_form_datagrid :input:radio:checked').val();
}

/**
 * Only numbers can is inserted in the field of text input.
 * When the <Enter> key is pressed, will go to the page specific.
 */
function goToPage(event, value) {
    var KEYS_ALLOWED = {
         8 : 'BACKSPACE',
        13 : 'ENTER',
        37 : 'LEFT_ARROW',
        39 : 'RIGHT_ARROW',
        46 : 'DELETE',
        48 : '0',
        49 : '1',
        50 : '2',
        51 : '3',
        52 : '4',
        53 : '5',
        54 : '6',
        55 : '7',
        56 : '8',
        57 : '9',
        96 : '0',
        97 : '1',
        98 : '2',
        99 : '3',
        100 : '4',
        101 : '5',
        102 : '6',
        103 : '7',
        104 : '8',
        105 : '9',
    };

    if (value && value != '')
        if (KEYS_ALLOWED[event.keyCode]) {
            if (event.keyCode == 13) {
                dgrid.s.page = value;
                dgrid.fillDatagrid();
            }
            return true;
        } else
            return false;

}

/**
 * Replaces %s in the search_filter for the value typed and refreshes
 * the datagrid with the results of the search.
 */
function datagrid_search(value) {
    if (value && value != '' && value != 'Find...') {
        filter = dgrid.s.search_filter;
        dgrid.s._filter = filter.replace('%s',value);
    } else
        dgrid.s._filter = dgrid.s.initial_filter;
    dgrid.fillDatagrid();
}

/**
 * Methods for navigation.
 */
function datagrid_first() {
    dgrid.s.page = 1;
    dgrid.fillDatagrid();
}

function datagrid_previous() {
    dgrid.s.page = dgrid.s.previous_page;
    dgrid.fillDatagrid();
}

function datagrid_next() {
    dgrid.s.page = dgrid.s.next_page;
    dgrid.fillDatagrid();
}

function datagrid_last() {
    dgrid.s.page = dgrid.s.total_pages;
    dgrid.fillDatagrid();
}

/**
 * Sort the data according to the column selected.
 */
function sorter(td) {
    var td_class, order = $(td).attr('id');
    td_class = $(td).attr('class');

    $('.asc').attr('class','head');
    $('.desc').attr('class','head');

    if (td_class == 'head')
        $(td).attr('class','asc');
    else
        if (td_class == 'asc') {
            $(td).attr('class','desc');
            order = '-'+order;
        }

    dgrid.s.order = order;
    dgrid.fillDatagrid();

}

/**
 * The main method.
 */
jQuery.fn.datagrid = function(settings) {
  // properties of the datagrid
  if (settings) {
    for (var attr in settings)
      dgrid.s[attr] = settings[attr];
  }

  this.each(function() { dgrid.createDatagrid(this); });

};
